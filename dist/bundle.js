(()=>{const e=[{id:"notes-jT-jjsyz61J8XKiI",title:"Welcome to Notes, Dimas!",body:"Welcome to Notes! This is your first note. You can archive it, delete it, or create new ones.",createdAt:"2022-07-28T10:03:12.594Z",archived:!1},{id:"notes-aB-cdefg12345",title:"Meeting Agenda",body:"Discuss project updates and assign tasks for the upcoming week.",createdAt:"2022-08-05T15:30:00.000Z",archived:!1},{id:"notes-XyZ-789012345",title:"Shopping List",body:"Milk, eggs, bread, fruits, and vegetables.",createdAt:"2022-08-10T08:45:23.120Z",archived:!1},{id:"notes-1a-2b3c4d5e6f",title:"Personal Goals",body:"Read two books per month, exercise three times a week, learn a new language.",createdAt:"2022-08-15T18:12:55.789Z",archived:!1},{id:"notes-LMN-456789",title:"Recipe: Spaghetti Bolognese",body:"Ingredients: ground beef, tomatoes, onions, garlic, pasta. Steps:...",createdAt:"2022-08-20T12:30:40.200Z",archived:!1},{id:"notes-QwErTyUiOp",title:"Workout Routine",body:"Monday: Cardio, Tuesday: Upper body, Wednesday: Rest, Thursday: Lower body, Friday: Cardio.",createdAt:"2022-08-25T09:15:17.890Z",archived:!1},{id:"notes-abcdef-987654",title:"Book Recommendations",body:"1. 'The Alchemist' by Paulo Coelho\n2. '1984' by George Orwell\n3. 'To Kill a Mockingbird' by Harper Lee",createdAt:"2022-09-01T14:20:05.321Z",archived:!1},{id:"notes-zyxwv-54321",title:"Daily Reflections",body:"Write down three positive things that happened today and one thing to improve tomorrow.",createdAt:"2022-09-07T20:40:30.150Z",archived:!1},{id:"notes-poiuyt-987654",title:"Travel Bucket List",body:"1. Paris, France\n2. Kyoto, Japan\n3. Santorini, Greece\n4. New York City, USA",createdAt:"2022-09-15T11:55:44.678Z",archived:!1},{id:"notes-asdfgh-123456",title:"Coding Projects",body:"1. Build a personal website\n2. Create a mobile app\n3. Contribute to an open-source project",createdAt:"2022-09-20T17:10:12.987Z",archived:!1},{id:"notes-5678-abcd-efgh",title:"Project Deadline",body:"Complete project tasks by the deadline on October 1st.",createdAt:"2022-09-28T14:00:00.000Z",archived:!1},{id:"notes-9876-wxyz-1234",title:"Health Checkup",body:"Schedule a routine health checkup with the doctor.",createdAt:"2022-10-05T09:30:45.600Z",archived:!1},{id:"notes-qwerty-8765-4321",title:"Financial Goals",body:"1. Create a monthly budget\n2. Save 20% of income\n3. Invest in a retirement fund.",createdAt:"2022-10-12T12:15:30.890Z",archived:!1},{id:"notes-98765-54321-12345",title:"Holiday Plans",body:"Research and plan for the upcoming holiday destination.",createdAt:"2022-10-20T16:45:00.000Z",archived:!1},{id:"notes-1234-abcd-5678",title:"Language Learning",body:"Practice Spanish vocabulary for 30 minutes every day.",createdAt:"2022-10-28T08:00:20.120Z",archived:!1}];console.log(e);const t=document.getElementById("notes-list");function n(){t.innerHTML="",e.forEach((e=>{const n=document.createElement("div");n.innerHTML=`\n      <h3>${e.title}</h3>\n      <p>${e.body}</p>\n      <small>Created at: ${e.createdAt}</small>\n      <hr>\n    `,t.appendChild(n)}))}n(),document.getElementById("add-note-form").addEventListener("submit",(async function(t){t.preventDefault();const o={title:this.title.value,body:this.body.value};try{const t=await fetch("https://notes-api.dicoding.dev/v2/notes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(t.ok){const o=await t.json();e.push(o),n(),this.reset()}else console.error("Failed to add new note:",t.status)}catch(e){console.error("Error adding new note:",e)}}));class o extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"}),t=document.createElement("div");t.setAttribute("class","app-bar"),t.innerHTML="\n      <h1>Notes App</h1>\n    ",e.appendChild(t);const n=document.createElement("style");n.textContent="\n      .app-bar {\n        background-color: #333;\n        color: white;\n        padding: 10px;\n        text-align: center;\n      }\n    ",e.appendChild(n)}}customElements.define("custom-app-bar",o);class a extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),o=document.createElement("form");o.setAttribute("id","add-note-form"),o.innerHTML='\n      <label for="title">Judul:</label>\n      <input type="text" id="title" name="title" required>\n      <label for="body">Isi:</label>\n      <textarea id="body" name="body" rows="4" required></textarea>\n      <input type="submit" value="Tambah Catatan">\n    ',t.appendChild(o);const a=document.createElement("style");a.textContent='\n      form {\n        margin-bottom: 20px;\n      }\n      label {\n        display: block;\n        margin-bottom: 5px;\n      }\n      input, textarea {\n        width: 100%;\n        padding: 5px;\n        font-size: 16px;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        box-sizing: border-box;\n      }\n      input[type="submit"] {\n        background-color: #4CAF50;\n        color: white;\n        padding: 10px 20px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        float: right;\n      }\n      input[type="submit"]:hover {\n        background-color: #45a049;\n      }\n    ',t.appendChild(a),o.addEventListener("submit",(function(t){t.preventDefault(),((t,o)=>{const a={id:`notes-${Math.random().toString(36).substr(2,10)}`,title:t,body:o,createdAt:(new Date).toISOString(),archived:!1};e.push(a),n()})(this.title.value,this.body.value),this.reset()}))}}customElements.define("custom-input",a);class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const e=document.createElement("template");e.innerHTML='\n          <style>\n              /* Define your component\'s styles here */\n              /* For example: */\n              h3 {\n                  font-size: 18px;\n                  margin-bottom: 5px;\n              }\n              p {\n                  font-size: 16px;\n                  margin-bottom: 10px;\n              }\n              small {\n                  font-size: 12px;\n                  color: gray;\n              }\n          </style>\n          <div class="note-item">\n              <h3></h3>\n              <p></p>\n              <small></small>\n          </div>\n      ',this.shadowRoot.appendChild(e.content.cloneNode(!0)),this.titleElement=this.shadowRoot.querySelector("h3"),this.bodyElement=this.shadowRoot.querySelector("p"),this.createdAtElement=this.shadowRoot.querySelector("small")}set title(e){this.titleElement.textContent=e}set body(e){this.bodyElement.textContent=e}set createdAt(e){this.createdAtElement.textContent=`Created at: ${e}`}}customElements.define("note-item",i);class d extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const e=document.createElement("footer");e.classList.add("custom-footer");const t=document.createElement("div");t.innerHTML=`\n          <p>&copy; ${(new Date).getFullYear()} Dicoding Project</p>\n          <p>Contact: ElShadayLatuheru@gmail.com</p>\n      `,e.appendChild(t),this.shadowRoot.appendChild(e);const n=document.createElement("style");n.textContent="\n          .custom-footer {\n              background-color: #333;\n              color: white;\n              padding: 10px;\n              text-align: center;\n              background-size : 100% ;\n          }\n          .custom-footer p {\n              margin: 5px 0;\n          }\n      ",this.shadowRoot.appendChild(n)}}customElements.define("custom-footer",d),async function(){try{const t=await fetch("https://notes-api.dicoding.dev/v2/notes");if(t.ok){const o=await t.json();e=o,n()}else console.error("Failed to fetch notes:",t.status)}catch(e){console.error("Error fetching notes:",e)}}(),t.addEventListener("click",(async function(t){if(t.target.classList.contains("delete-button")){const o=t.target.dataset.id;await async function(t){try{const o=await fetch("https://notes-api.dicoding.dev/v2/notes/{note_id}",{method:"DELETE"});o.ok?(e=e.filter((e=>e.id!==t)),n()):console.error("Failed to delete note:",o.status)}catch(e){console.error("Error deleting note:",e)}}(o)}}))})();